#!/usr/bin/env python

from PandaCore.Tools.Misc import tTIMES, tAND
from sys import argv, exit
from re import sub
import argparse
from os.path import isfile

parser = argparse.ArgumentParser(description='treedump')
parser.add_argument('--treename',help='input TTree name',type=str,default='events')
parser.add_argument('--dump',help='file containing list of dump',type=str,default=None)
parser.add_argument('--events',help='event expression',type=str,default=None)
parser.add_argument('--cut',help='cut',type=str,default=None)
parser.add_argument('infile',metavar='input',type=str,help='input file to process')
args = parser.parse_args()
sname = argv[0]
argv = []

from PandaCore.Utils.logging import logger
from PandaCore.Tools.root_interface import read_tree
import numpy as np
from ROOT import TFile

fmt_string = ' %12s |'

to_dump = []
if args.dump:
    to_dump += [x.strip() for x in open(args.dump).readlines()] if isfile(args.dump) else args.dump.split(',')
for x in ['eventNumber','lumiNumber','runNumber']:
    to_dump.insert(0,x)


f = TFile(args.infile)
t = f.FindObjectAny(args.treename)

cut = '1==1'
if args.events:
    events = [x.strip() for x in open(args.events).readlines()] if isfile(args.events) else args.events.split(',')
    event_cutstring = '||'.join(['eventNumber==%s'%x for x in events])
    cut = tAND(cut, event_cutstring)
if args.cut:
    cut = tAND(cut, args.cut)
arr = read_tree(t, branches=to_dump, cut=cut)
out_str = ''
for d in to_dump:
    out_str += fmt_string%(d[:12])
out_str += '\n'
for d in to_dump:
    out_str += fmt_string%('-'*12)
out_str += '\n'

if not args.events:
    events = arr['eventNumber']
for e in events:
    mask = arr['eventNumber']==long(e)
    if not np.sum(mask):
        logger.error(sname, 'Could not find event '+str(e))
        continue
    row = arr[mask]
    for d in to_dump:
        out_str += fmt_string%(row[d][0])
    out_str += '\n'

print out_str
